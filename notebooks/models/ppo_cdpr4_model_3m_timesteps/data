{
    "policy_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVOwAAAAAAAACMIXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5wb2xpY2llc5SMEUFjdG9yQ3JpdGljUG9saWN5lJOULg==",
        "__module__": "stable_baselines3.common.policies",
        "__doc__": "\n    Policy class for actor-critic algorithms (has both policy and value prediction).\n    Used by A2C, PPO and the likes.\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param ortho_init: Whether to use or not orthogonal initialization\n    :param use_sde: Whether to use State Dependent Exploration or not\n    :param log_std_init: Initial value for the log standard deviation\n    :param full_std: Whether to use (n_features x n_actions) parameters\n        for the std instead of only (n_features,) when using gSDE\n    :param use_expln: Use ``expln()`` function instead of ``exp()`` to ensure\n        a positive standard deviation (cf paper). It allows to keep variance\n        above zero and prevent it from growing too fast. In practice, ``exp()`` is usually enough.\n    :param squash_output: Whether to squash the output using a tanh function,\n        this allows to ensure boundaries when using gSDE.\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param share_features_extractor: If True, the features extractor is shared between the policy and value networks.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    ",
        "__init__": "<function ActorCriticPolicy.__init__ at 0x7f3524170ca0>",
        "_get_constructor_parameters": "<function ActorCriticPolicy._get_constructor_parameters at 0x7f3524170d30>",
        "reset_noise": "<function ActorCriticPolicy.reset_noise at 0x7f3524170dc0>",
        "_build_mlp_extractor": "<function ActorCriticPolicy._build_mlp_extractor at 0x7f3524170e50>",
        "_build": "<function ActorCriticPolicy._build at 0x7f3524170ee0>",
        "forward": "<function ActorCriticPolicy.forward at 0x7f3524170f70>",
        "extract_features": "<function ActorCriticPolicy.extract_features at 0x7f3524171000>",
        "_get_action_dist_from_latent": "<function ActorCriticPolicy._get_action_dist_from_latent at 0x7f3524171090>",
        "_predict": "<function ActorCriticPolicy._predict at 0x7f3524171120>",
        "evaluate_actions": "<function ActorCriticPolicy.evaluate_actions at 0x7f35241711b0>",
        "get_distribution": "<function ActorCriticPolicy.get_distribution at 0x7f3524171240>",
        "predict_values": "<function ActorCriticPolicy.predict_values at 0x7f35241712d0>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x7f35427c47c0>"
    },
    "verbose": 1,
    "policy_kwargs": {
        ":type:": "<class 'dict'>",
        ":serialized:": "gAWVjwAAAAAAAAB9lCiMDGxvZ19zdGRfaW5pdJRHwAAAAAAAAACMCm9ydGhvX2luaXSUiYwNYWN0aXZhdGlvbl9mbpSMG3RvcmNoLm5uLm1vZHVsZXMuYWN0aXZhdGlvbpSMBFJlTFWUk5SMCG5ldF9hcmNolH2UKIwCcGmUXZQoTQACTQACZYwCdmaUXZQoTQACTQACZXV1Lg==",
        "log_std_init": -2.0,
        "ortho_init": false,
        "activation_fn": "<class 'torch.nn.modules.activation.ReLU'>",
        "net_arch": {
            "pi": [
                512,
                512
            ],
            "vf": [
                512,
                512
            ]
        }
    },
    "num_timesteps": 100007936,
    "_total_timesteps": 100000000,
    "_num_timesteps_at_start": 0,
    "seed": null,
    "action_noise": null,
    "start_time": 1733166829517142227,
    "learning_rate": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVDQUAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwVLBksTQ1xkAXwAGAB9AYgAiAEUAH0CfAGIAmsAchKIAHwBiAIbABQAUwB8AYgCGABkAYgCGAAbAH0DZAJkAXQAoAF0AGoCfAMUAKEBFwAUAH0EfAKIAHwCGAB8BBQAFwBTAJRYeAEAAAogICAgICAgIFByb2dyZXNzIHdpbGwgZGVjcmVhc2UgZnJvbSAxIChiZWdpbm5pbmcpIHRvIDAuCiAgICAgICAgTGVhcm5pbmcgcmF0ZSB3aWxsIGZvbGxvdzoKICAgICAgICAxLiBMaW5lYXIgd2FybXVwIGZyb20gMCB0byBpbml0aWFsX3ZhbHVlIGZvciB3YXJtdXBfZnJhY3Rpb24gb2YgdG90YWwgc3RlcHMKICAgICAgICAyLiBDb3NpbmUgZGVjYXkgZnJvbSBpbml0aWFsX3ZhbHVlIHRvIChpbml0aWFsX3ZhbHVlICogbWluX3ZhbHVlX3BlcmNlbnQpCgogICAgICAgIDpwYXJhbSBwcm9ncmVzc19yZW1haW5pbmc6IGdvZXMgZnJvbSAxIChiZWdpbm5pbmcpIHRvIDAgKGVuZCkKICAgICAgICA6cmV0dXJuOiBjdXJyZW50IGxlYXJuaW5nIHJhdGUKICAgICAgICCUSwFHP+AAAAAAAACHlIwCbnCUjANjb3OUjAJwaZSHlCiMEnByb2dyZXNzX3JlbWFpbmluZ5SMDXByb2dyZXNzX2RvbmWUjAltaW5fdmFsdWWUjBVwcm9ncmVzc19hZnRlcl93YXJtdXCUjAxjb3NpbmVfZGVjYXmUdJSMJS9yb290L3JlbW90ZS1kZXYvYWktc2VvL2NkcHI0L21haW4ucHmUjARmdW5jlE1WAkMSCAoIAQgDDAIGAwYBBP8YAxADlIwNaW5pdGlhbF92YWx1ZZSMEW1pbl92YWx1ZV9wZXJjZW50lIwPd2FybXVwX2ZyYWN0aW9ulIeUKXSUUpR9lCiMC19fcGFja2FnZV9flE6MCF9fbmFtZV9flIwIX19tYWluX1+UjAhfX2ZpbGVfX5RoFXVOTmgAjBBfbWFrZV9lbXB0eV9jZWxslJOUKVKUaCQpUpRoJClSlIeUdJRSlGgAjBJfZnVuY3Rpb25fc2V0c3RhdGWUk5RoKn2UfZQoaCBoFowMX19xdWFsbmFtZV9flIwpY29zaW5lX3NjaGVkdWxlX3dpdGhfd2FybXVwLjxsb2NhbHM+LmZ1bmOUjA9fX2Fubm90YXRpb25zX1+UfZQoaA+MCGJ1aWx0aW5zlIwFZmxvYXSUk5SMBnJldHVybpRoNXWMDl9fa3dkZWZhdWx0c19flE6MDF9fZGVmYXVsdHNfX5ROjApfX21vZHVsZV9flGghjAdfX2RvY19flGgJjAtfX2Nsb3N1cmVfX5RoAIwKX21ha2VfY2VsbJSTlEc/Sjbi6xxDLYWUUpRoPUc/uZmZmZmZmoWUUpRoPUc/hHrhR64Ue4WUUpSHlIwXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UaAtoAIwJc3ViaW1wb3J0lJOUjAVudW1weZSFlFKUc3WGlIZSMC4="
    },
    "tensorboard_log": "./ppo_cdpr4_tensorboard/",
    "_last_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": ""
    },
    "_last_episode_starts": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVdAIAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYAAglIwFbnVtcHmUjAVkdHlwZZSTlIwCYjGUiYiHlFKUKEsDjAF8lE5OTkr/////Sv////9LAHSUYk0AAoWUjAFDlHSUUpQu"
    },
    "_last_original_obs": null,
    "_episode_num": 0,
    "use_sde": false,
    "sde_sample_freq": -1,
    "_current_progress_remaining": -7.935999999997279e-05,
    "_stats_window_size": 100,
    "ep_info_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "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"
    },
    "ep_success_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "_n_updates": 122080,
    "observation_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWVDQMAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMBl9zaGFwZZRLCYWUjANsb3eUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWJAAAAAAAAAASg4C/EoOgv5qZGT4AAADAAAAAwAAAAMBGtpO/RrazvwAAAACUaAtLCYWUjAFDlHSUUpSMDWJvdW5kZWRfYmVsb3eUaBMolgkAAAAAAAAAAQEBAQEBAQEBlGgIjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwmFlGgWdJRSlIwEaGlnaJRoEyiWJAAAAAAAAAASg4A/EoOgP+F6REAAAABAAAAAQAAAAEBGtpM/RrazP3sUTkCUaAtLCYWUaBZ0lFKUjA1ib3VuZGVkX2Fib3ZllGgTKJYJAAAAAAAAAAEBAQEBAQEBAZRoHUsJhZRoFnSUUpSMCGxvd19yZXBylIxAWy0xLjAwNCAtMS4yNTQgIDAuMTUgIC0yLiAgICAtMi4gICAgLTIuICAgIC0xLjE1NCAtMS40MDQgIDAuICAgXZSMCWhpZ2hfcmVwcpSMN1sxLjAwNCAxLjI1NCAzLjA3ICAyLiAgICAyLiAgICAyLiAgICAxLjE1NCAxLjQwNCAzLjIyIF2UjApfbnBfcmFuZG9tlIwUbnVtcHkucmFuZG9tLl9waWNrbGWUjBBfX2dlbmVyYXRvcl9jdG9ylJOUjAVQQ0c2NJRoMowUX19iaXRfZ2VuZXJhdG9yX2N0b3KUk5SGlFKUfZQojA1iaXRfZ2VuZXJhdG9ylIwFUENHNjSUjAVzdGF0ZZR9lChoPYoRXGFRKRGcwcCJWwGZ/vLp4gCMA2luY5SKEDfOUTIHdPck8x5wCsNpZCJ1jApoYXNfdWludDMylEsAjAh1aW50ZWdlcpRLAHVidWIu",
        "dtype": "float32",
        "_shape": [
            9
        ],
        "low": "[-1.004 -1.254  0.15  -2.    -2.    -2.    -1.154 -1.404  0.   ]",
        "bounded_below": "[ True  True  True  True  True  True  True  True  True]",
        "high": "[1.004 1.254 3.07  2.    2.    2.    1.154 1.404 3.22 ]",
        "bounded_above": "[ True  True  True  True  True  True  True  True  True]",
        "low_repr": "[-1.004 -1.254  0.15  -2.    -2.    -2.    -1.154 -1.404  0.   ]",
        "high_repr": "[1.004 1.254 3.07  2.    2.    2.    1.154 1.404 3.22 ]",
        "_np_random": "Generator(PCG64)"
    },
    "action_space": {
        ":type:": "<class 'gymnasium.spaces.multi_discrete.MultiDiscrete'>",
        ":serialized:": "gAWVPAEAAAAAAACMH2d5bW5hc2l1bS5zcGFjZXMubXVsdGlfZGlzY3JldGWUjA1NdWx0aURpc2NyZXRllJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmk4lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMBG52ZWOUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWIAAAAAAAAAALAAAAAAAAAAsAAAAAAAAACwAAAAAAAAALAAAAAAAAAJRoC0sEhZSMAUOUdJRSlIwFc3RhcnSUaBEoliAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUaAtLBIWUaBR0lFKUjAZfc2hhcGWUSwSFlIwKX25wX3JhbmRvbZROdWIu",
        "dtype": "int64",
        "nvec": "[11 11 11 11]",
        "start": "[0 0 0 0]",
        "_shape": [
            4
        ],
        "_np_random": null
    },
    "n_envs": 512,
    "n_steps": 32,
    "gamma": 0.99,
    "gae_lambda": 0.95,
    "ent_coef": 0.0005,
    "vf_coef": 0.5,
    "max_grad_norm": 100.0,
    "rollout_buffer_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVNgAAAAAAAACMIHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5idWZmZXJzlIwNUm9sbG91dEJ1ZmZlcpSTlC4=",
        "__module__": "stable_baselines3.common.buffers",
        "__annotations__": "{'observations': <class 'numpy.ndarray'>, 'actions': <class 'numpy.ndarray'>, 'rewards': <class 'numpy.ndarray'>, 'advantages': <class 'numpy.ndarray'>, 'returns': <class 'numpy.ndarray'>, 'episode_starts': <class 'numpy.ndarray'>, 'log_probs': <class 'numpy.ndarray'>, 'values': <class 'numpy.ndarray'>}",
        "__doc__": "\n    Rollout buffer used in on-policy algorithms like A2C/PPO.\n    It corresponds to ``buffer_size`` transitions collected\n    using the current policy.\n    This experience will be discarded after the policy update.\n    In order to use PPO objective, we also store the current value of each state\n    and the log probability of each taken action.\n\n    The term rollout here refers to the model-free notion and should not\n    be used with the concept of rollout used in model-based RL or planning.\n    Hence, it is only involved in policy and value function training but not action selection.\n\n    :param buffer_size: Max number of element in the buffer\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param device: PyTorch device\n    :param gae_lambda: Factor for trade-off of bias vs variance for Generalized Advantage Estimator\n        Equivalent to classic advantage when set to 1.\n    :param gamma: Discount factor\n    :param n_envs: Number of parallel environments\n    ",
        "__init__": "<function RolloutBuffer.__init__ at 0x7f352ef28af0>",
        "reset": "<function RolloutBuffer.reset at 0x7f352ef28b80>",
        "compute_returns_and_advantage": "<function RolloutBuffer.compute_returns_and_advantage at 0x7f352ef28c10>",
        "add": "<function RolloutBuffer.add at 0x7f352ef28ca0>",
        "get": "<function RolloutBuffer.get at 0x7f352ef28d30>",
        "_get_samples": "<function RolloutBuffer._get_samples at 0x7f352ef28dc0>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x7f3542adc640>"
    },
    "rollout_buffer_kwargs": {},
    "batch_size": 512,
    "n_epochs": 20,
    "clip_range": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVgwMAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLA0sTQwx0AIgAfACDAYMBUwCUToWUjAVmbG9hdJSFlIwScHJvZ3Jlc3NfcmVtYWluaW5nlIWUjEkvdXNyL2xvY2FsL2xpYi9weXRob24zLjEwL2Rpc3QtcGFja2FnZXMvc3RhYmxlX2Jhc2VsaW5lczMvY29tbW9uL3V0aWxzLnB5lIwIPGxhbWJkYT6US2FDAgwAlIwOdmFsdWVfc2NoZWR1bGWUhZQpdJRSlH2UKIwLX19wYWNrYWdlX1+UjBhzdGFibGVfYmFzZWxpbmVzMy5jb21tb26UjAhfX25hbWVfX5SMHnN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi51dGlsc5SMCF9fZmlsZV9flIxJL3Vzci9sb2NhbC9saWIvcHl0aG9uMy4xMC9kaXN0LXBhY2thZ2VzL3N0YWJsZV9iYXNlbGluZXMzL2NvbW1vbi91dGlscy5weZR1Tk5oAIwQX21ha2VfZW1wdHlfY2VsbJSTlClSlIWUdJRSlGgAjBJfZnVuY3Rpb25fc2V0c3RhdGWUk5RoIX2UfZQoaBhoD4wMX19xdWFsbmFtZV9flIwhZ2V0X3NjaGVkdWxlX2ZuLjxsb2NhbHM+LjxsYW1iZGE+lIwPX19hbm5vdGF0aW9uc19flH2UjA5fX2t3ZGVmYXVsdHNfX5ROjAxfX2RlZmF1bHRzX1+UTowKX19tb2R1bGVfX5RoGYwHX19kb2NfX5ROjAtfX2Nsb3N1cmVfX5RoAIwKX21ha2VfY2VsbJSTlGgCKGgHKEsBSwBLAEsBSwFLE0MEiABTAJRoCSmMAV+UhZRoDowEZnVuY5RLhUMCBAGUjAN2YWyUhZQpdJRSlGgVTk5oHSlSlIWUdJRSlGgjaD19lH2UKGgYaDRoJowZY29uc3RhbnRfZm4uPGxvY2Fscz4uZnVuY5RoKH2UaCpOaCtOaCxoGWgtTmguaDBHP8mZmZmZmZqFlFKUhZSMF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAtfX2dsb2JhbHNfX5R9lHWGlIZSMIWUUpSFlGhFXZRoR32UdYaUhlIwLg=="
    },
    "clip_range_vf": null,
    "normalize_advantage": true,
    "target_kl": null,
    "lr_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVsAYAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLA0sTQwx0AIgAfACDAYMBUwCUToWUjAVmbG9hdJSFlIwScHJvZ3Jlc3NfcmVtYWluaW5nlIWUjEkvdXNyL2xvY2FsL2xpYi9weXRob24zLjEwL2Rpc3QtcGFja2FnZXMvc3RhYmxlX2Jhc2VsaW5lczMvY29tbW9uL3V0aWxzLnB5lIwIPGxhbWJkYT6US2FDAgwAlIwOdmFsdWVfc2NoZWR1bGWUhZQpdJRSlH2UKIwLX19wYWNrYWdlX1+UjBhzdGFibGVfYmFzZWxpbmVzMy5jb21tb26UjAhfX25hbWVfX5SMHnN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi51dGlsc5SMCF9fZmlsZV9flIxJL3Vzci9sb2NhbC9saWIvcHl0aG9uMy4xMC9kaXN0LXBhY2thZ2VzL3N0YWJsZV9iYXNlbGluZXMzL2NvbW1vbi91dGlscy5weZR1Tk5oAIwQX21ha2VfZW1wdHlfY2VsbJSTlClSlIWUdJRSlGgAjBJfZnVuY3Rpb25fc2V0c3RhdGWUk5RoIX2UfZQoaBhoD4wMX19xdWFsbmFtZV9flIwhZ2V0X3NjaGVkdWxlX2ZuLjxsb2NhbHM+LjxsYW1iZGE+lIwPX19hbm5vdGF0aW9uc19flH2UjA5fX2t3ZGVmYXVsdHNfX5ROjAxfX2RlZmF1bHRzX1+UTowKX19tb2R1bGVfX5RoGYwHX19kb2NfX5ROjAtfX2Nsb3N1cmVfX5RoAIwKX21ha2VfY2VsbJSTlGgCKGgHKEsBSwBLAEsFSwZLE0NcZAF8ABgAfQGIAIgBFAB9AnwBiAJrAHISiAB8AYgCGwAUAFMAfAGIAhgAZAGIAhgAGwB9A2QCZAF0AKABdABqAnwDFAChARcAFAB9BHwCiAB8AhgAfAQUABcAUwCUWHgBAAAKICAgICAgICBQcm9ncmVzcyB3aWxsIGRlY3JlYXNlIGZyb20gMSAoYmVnaW5uaW5nKSB0byAwLgogICAgICAgIExlYXJuaW5nIHJhdGUgd2lsbCBmb2xsb3c6CiAgICAgICAgMS4gTGluZWFyIHdhcm11cCBmcm9tIDAgdG8gaW5pdGlhbF92YWx1ZSBmb3Igd2FybXVwX2ZyYWN0aW9uIG9mIHRvdGFsIHN0ZXBzCiAgICAgICAgMi4gQ29zaW5lIGRlY2F5IGZyb20gaW5pdGlhbF92YWx1ZSB0byAoaW5pdGlhbF92YWx1ZSAqIG1pbl92YWx1ZV9wZXJjZW50KQoKICAgICAgICA6cGFyYW0gcHJvZ3Jlc3NfcmVtYWluaW5nOiBnb2VzIGZyb20gMSAoYmVnaW5uaW5nKSB0byAwIChlbmQpCiAgICAgICAgOnJldHVybjogY3VycmVudCBsZWFybmluZyByYXRlCiAgICAgICAglEsBRz/gAAAAAAAAh5SMAm5wlIwDY29zlIwCcGmUh5QoaAyMDXByb2dyZXNzX2RvbmWUjAltaW5fdmFsdWWUjBVwcm9ncmVzc19hZnRlcl93YXJtdXCUjAxjb3NpbmVfZGVjYXmUdJSMJS9yb290L3JlbW90ZS1kZXYvYWktc2VvL2NkcHI0L21haW4ucHmUjARmdW5jlE1WAkMSCAoIAQgDDAIGAwYBBP8YAxADlIwNaW5pdGlhbF92YWx1ZZSMEW1pbl92YWx1ZV9wZXJjZW50lIwPd2FybXVwX2ZyYWN0aW9ulIeUKXSUUpR9lChoFk5oGIwIX19tYWluX1+UaBpoPXVOTmgdKVKUaB0pUpRoHSlSlIeUdJRSlGgjaE19lH2UKGgYaD5oJowpY29zaW5lX3NjaGVkdWxlX3dpdGhfd2FybXVwLjxsb2NhbHM+LmZ1bmOUaCh9lChoDIwIYnVpbHRpbnOUjAVmbG9hdJSTlIwGcmV0dXJulGhUdWgqTmgrTmgsaEdoLWgyaC5oMEc/Sjbi6xxDLYWUUpRoMEc/uZmZmZmZmoWUUpRoMEc/hHrhR64Ue4WUUpSHlIwXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UaDRoAIwJc3ViaW1wb3J0lJOUjAVudW1weZSFlFKUc3WGlIZSMIWUUpSFlGhdXZRoX32UdYaUhlIwLg=="
    }
}