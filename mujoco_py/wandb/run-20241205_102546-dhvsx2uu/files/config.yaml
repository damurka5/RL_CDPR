_current_progress_remaining:
    value: 1
_custom_logger:
    value: "False"
_episode_num:
    value: 0
_episode_storage:
    value: None
_last_episode_starts:
    value: '[ True  True  True  True]'
_last_obs:
    value: |-
        [[-0.49582568 -0.63506037  2.6517406   0.          0.          0.
          -0.73413646 -1.3952457   1.1894051 ]
         [-0.8948689   1.1713016   0.8368394   0.          0.          0.
          -0.9580392   1.124082    2.6298954 ]
         [-0.905682   -1.1044745   0.16312921  0.          0.          0.
           0.03769167  0.57686436  0.2045517 ]
         [-0.7607139  -0.416938    2.924727    0.          0.          0.
          -0.40922976 -0.641305    1.2455755 ]]
_last_original_obs:
    value: None
_logger:
    value: <stable_baselines3.common.logger.Logger object at 0x1696b64c0>
_n_updates:
    value: 0
_num_timesteps_at_start:
    value: 0
_stats_window_size:
    value: 100
_total_timesteps:
    value: 1000000
_vec_normalize_env:
    value: None
_wandb:
    value:
        cli_version: 0.18.7
        m: []
        python_version: 3.9.20
        t:
            "1":
                - 1
                - 55
            "2":
                - 1
                - 55
            "3":
                - 2
                - 22
                - 23
                - 35
                - 34
                - 55
            "4": 3.9.20
            "5": 0.18.7
            "8":
                - 1
                - 5
            "12": 0.18.7
            "13": darwin-arm64
action_noise:
    value: None
action_space:
    value: Box(0.0, 1.0, (4,), float32)
actor:
    value: |-
        Actor(
          (features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (mu): Sequential(
            (0): Linear(in_features=9, out_features=512, bias=True)
            (1): ReLU()
            (2): Linear(in_features=512, out_features=512, bias=True)
            (3): ReLU()
            (4): Linear(in_features=512, out_features=4, bias=True)
            (5): Tanh()
          )
        )
actor_batch_norm_stats:
    value: '[]'
actor_batch_norm_stats_target:
    value: '[]'
actor_target:
    value: |-
        Actor(
          (features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (mu): Sequential(
            (0): Linear(in_features=9, out_features=512, bias=True)
            (1): ReLU()
            (2): Linear(in_features=512, out_features=512, bias=True)
            (3): ReLU()
            (4): Linear(in_features=512, out_features=4, bias=True)
            (5): Tanh()
          )
        )
algo:
    value: DDPG
batch_size:
    value: 32
buffer_size:
    value: 1000000
critic:
    value: |-
        ContinuousCritic(
          (features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (qf0): Sequential(
            (0): Linear(in_features=13, out_features=512, bias=True)
            (1): ReLU()
            (2): Linear(in_features=512, out_features=512, bias=True)
            (3): ReLU()
            (4): Linear(in_features=512, out_features=1, bias=True)
          )
        )
critic_batch_norm_stats:
    value: '[]'
critic_batch_norm_stats_target:
    value: '[]'
critic_target:
    value: |-
        ContinuousCritic(
          (features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (qf0): Sequential(
            (0): Linear(in_features=13, out_features=512, bias=True)
            (1): ReLU()
            (2): Linear(in_features=512, out_features=512, bias=True)
            (3): ReLU()
            (4): Linear(in_features=512, out_features=1, bias=True)
          )
        )
device:
    value: cpu
env:
    value: <stable_baselines3.common.vec_env.subproc_vec_env.SubprocVecEnv object at 0x1696ac340>
ep_info_buffer:
    value: deque([], maxlen=100)
ep_success_buffer:
    value: deque([], maxlen=100)
gamma:
    value: 0.99
gradient_steps:
    value: 1
learning_rate:
    value: <function cosine_schedule_with_warmup.<locals>.func at 0x16969d8b0>
learning_starts:
    value: 100
lr_schedule:
    value: <function get_schedule_fn.<locals>.<lambda> at 0x16945ee50>
n_envs:
    value: 4
num_timesteps:
    value: 0
observation_space:
    value: Box([-1.004 -1.254  0.15  -2.    -2.    -2.    -1.154 -1.404  0.   ], [1.004 1.254 3.07  2.    2.    2.    1.154 1.404 3.22 ], (9,), float32)
optimize_memory_usage:
    value: "False"
policy:
    value: |-
        TD3Policy(
          (actor): Actor(
            (features_extractor): FlattenExtractor(
              (flatten): Flatten(start_dim=1, end_dim=-1)
            )
            (mu): Sequential(
              (0): Linear(in_features=9, out_features=512, bias=True)
              (1): ReLU()
              (2): Linear(in_features=512, out_features=512, bias=True)
              (3): ReLU()
              (4): Linear(in_features=512, out_features=4, bias=True)
              (5): Tanh()
            )
          )
          (actor_target): Actor(
            (features_extractor): FlattenExtractor(
              (flatten): Flatten(start_dim=1, end_dim=-1)
            )
            (mu): Sequential(
              (0): Linear(in_features=9, out_features=512, bias=True)
              (1): ReLU()
              (2): Linear(in_features=512, out_features=512, bias=True)
              (3): ReLU()
              (4): Linear(in_features=512, out_features=4, bias=True)
              (5): Tanh()
            )
          )
          (critic): ContinuousCritic(
            (features_extractor): FlattenExtractor(
              (flatten): Flatten(start_dim=1, end_dim=-1)
            )
            (qf0): Sequential(
              (0): Linear(in_features=13, out_features=512, bias=True)
              (1): ReLU()
              (2): Linear(in_features=512, out_features=512, bias=True)
              (3): ReLU()
              (4): Linear(in_features=512, out_features=1, bias=True)
            )
          )
          (critic_target): ContinuousCritic(
            (features_extractor): FlattenExtractor(
              (flatten): Flatten(start_dim=1, end_dim=-1)
            )
            (qf0): Sequential(
              (0): Linear(in_features=13, out_features=512, bias=True)
              (1): ReLU()
              (2): Linear(in_features=512, out_features=512, bias=True)
              (3): ReLU()
              (4): Linear(in_features=512, out_features=1, bias=True)
            )
          )
        )
policy_class:
    value: <class 'stable_baselines3.td3.policies.TD3Policy'>
policy_delay:
    value: 1
policy_kwargs:
    value: '{''activation_fn'': <class ''torch.nn.modules.activation.ReLU''>, ''net_arch'': {''pi'': [512, 512], ''qf'': [512, 512]}, ''n_critics'': 1}'
replay_buffer:
    value: <stable_baselines3.common.buffers.ReplayBuffer object at 0x1696acaf0>
replay_buffer_class:
    value: <class 'stable_baselines3.common.buffers.ReplayBuffer'>
replay_buffer_kwargs:
    value: '{}'
sde_sample_freq:
    value: -1
seed:
    value: None
start_time:
    value: 1733383549164728000
target_noise_clip:
    value: 0
target_policy_noise:
    value: 0.1
tau:
    value: 0.005
tensorboard_log:
    value: ./ddpg_cdpr4_tensorboard/
train_freq:
    value: 'TrainFreq(frequency=1, unit=<TrainFrequencyUnit.STEP: ''step''>)'
use_sde:
    value: "False"
use_sde_at_warmup:
    value: "False"
verbose:
    value: 0
